{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes\\\\React Basics\\\\MERN-main\\\\MERN-main\\\\frontend\\\\src\\\\components\\\\Update.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/UpdateUser.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateUser = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the user ID from the URL\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch the user details for the given ID\n    fetch(`/api/users/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      return response.json(); // Return the JSON from response\n    }).then(data => {\n      console.log(data);\n      setName(data.name); // Set the user's name in state\n      setEmail(data.email); // Set the user's email in state\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }, [id]); // Add id as dependency\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedUser = {\n      name,\n      email\n    };\n\n    // Send PUT request to update the user details\n    fetch(`/api/users/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedUser) // Send the updated user data as JSON\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update user');\n      }\n      return response.json(); // Return the updated user as JSON\n    }).then(data => {\n      console.log('User updated:', data);\n      navigate('/users'); // Navigate back to user list after successful update\n    }).catch(error => {\n      console.error('Error updating user:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Enter Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name // Bind the input value to state\n          ,\n          onChange: e => setName(e.target.value) // Update state on input change\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Enter Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: email // Bind the input value to state\n          ,\n          onChange: e => setEmail(e.target.value) // Update state on input change\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateUser, \"v1+EqeQIyuOg+6TNGPK4aXCCmrI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateUser","_s","id","name","setName","email","setEmail","navigate","fetch","then","response","ok","Error","json","data","console","log","catch","error","handleSubmit","e","preventDefault","updatedUser","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/codes/React Basics/MERN-main/MERN-main/frontend/src/components/Update.js"],"sourcesContent":["// frontend/src/components/UpdateUser.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst UpdateUser = () => {\r\n    const { id } = useParams(); // Get the user ID from the URL\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Fetch the user details for the given ID\r\n        fetch(`/api/users/${id}`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch user data');\r\n            }\r\n            return response.json(); // Return the JSON from response\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            setName(data.name); // Set the user's name in state\r\n            setEmail(data.email); // Set the user's email in state\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching user data:', error);\r\n        });\r\n    }, [id]); // Add id as dependency\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updatedUser = { name, email };\r\n\r\n        // Send PUT request to update the user details\r\n        fetch(`/api/users/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedUser), // Send the updated user data as JSON\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to update user');\r\n                }\r\n                return response.json(); // Return the updated user as JSON\r\n            })\r\n            .then(data => {\r\n                console.log('User updated:', data);\r\n                navigate('/users'); // Navigate back to user list after successful update\r\n            })\r\n            .catch(error => {\r\n                console.error('Error updating user:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Update User</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Enter Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name} // Bind the input value to state\r\n                        onChange={(e) => setName(e.target.value)} // Update state on input change\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Enter Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        value={email} // Bind the input value to state\r\n                        onChange={(e) => setEmail(e.target.value)} // Update state on input change\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Update User</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}