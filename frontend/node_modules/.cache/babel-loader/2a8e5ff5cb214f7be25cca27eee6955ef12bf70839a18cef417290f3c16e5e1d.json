{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes\\\\React Basics\\\\MERN-main\\\\MERN-main\\\\frontend\\\\src\\\\components\\\\Forms.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./css/Forms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forms = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handler = async e => {\n    e.preventDefault();\n    const formData = {\n      name,\n      email\n    };\n    try {\n      // Make the fetch request using async/await\n      const response = await fetch('/form/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      // Check if the response is not ok, and throw an error if necessary\n      if (!response.ok) {\n        throw new Error('Failed to submit form');\n      }\n\n      // Await the JSON response\n      const data = await response.json();\n\n      // Log the success and navigate to the success page\n      console.log('Success:', data);\n      navigate(\"/success\");\n    } catch (error) {\n      // Catch any errors during the fetch or processing\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Forms, \"oNMGopRk1q7ksH1efhMrSHN27MU=\", false, function () {\n  return [useNavigate];\n});\n_c = Forms;\nexport default Forms;\n\n// frontend/src/components/Forms.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Form, Button, Container } from 'react-bootstrap';\n\n// const Forms = () => {\n//     const [name, setName] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handler = (e) => {\n//         e.preventDefault();\n//         const formData = { name, email };\n\n//         fetch('/form/create', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(formData),\n//         })\n//         .then(response => response.json())\n//         .then(data => {\n//             console.log('Success:', data);\n//             navigate(\"/success\");\n//             setName('');\n//             setEmail('');\n//         })\n//         .catch((error) => {\n//             console.error('Error:', error);\n//         });\n//     };\n\n//     return (\n//         <Container className=\"mt-5\">\n//             <h2 className=\"text-center\">User Registration</h2>\n//             <Form onSubmit={handler} className=\"border p-4 rounded shadow\">\n//                 <Form.Group controlId=\"formName\">\n//                     <Form.Label>Enter Name:</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         value={name} \n//                         onChange={(e) => setName(e.target.value)} \n//                         required \n//                         placeholder=\"Enter your name\" \n//                     />\n//                 </Form.Group>\n\n//                 <Form.Group controlId=\"formEmail\">\n//                     <Form.Label>Enter Email:</Form.Label>\n//                     <Form.Control \n//                         type=\"email\" \n//                         value={email} \n//                         onChange={(e) => setEmail(e.target.value)} \n//                         required \n//                         placeholder=\"Enter your email\" \n//                     />\n//                 </Form.Group>\n\n//                 <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n//                     Submit\n//                 </Button>\n//             </Form>\n//         </Container>\n//     );\n// };\n\n// export default Forms;\nvar _c;\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Forms","_s","name","setName","email","setEmail","navigate","handler","e","preventDefault","formData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/codes/React Basics/MERN-main/MERN-main/frontend/src/components/Forms.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./css/Forms.css\";\r\n\r\nconst Forms = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handler = async (e) => {\r\n        e.preventDefault();\r\n        const formData = { name, email };\r\n\r\n        try {\r\n            // Make the fetch request using async/await\r\n            const response = await fetch('/form/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            // Check if the response is not ok, and throw an error if necessary\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit form');\r\n            }\r\n\r\n            // Await the JSON response\r\n            const data = await response.json();\r\n\r\n            // Log the success and navigate to the success page\r\n            console.log('Success:', data);\r\n            navigate(\"/success\");\r\n\r\n        } catch (error) {\r\n            // Catch any errors during the fetch or processing\r\n            console.error('Error:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>User Registration</h2>\r\n            <form onSubmit={handler}>\r\n                <label>Enter Name:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n                <label>Enter Email:</label>\r\n                <input \r\n                    type=\"email\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Forms;\r\n\r\n// frontend/src/components/Forms.js\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Form, Button, Container } from 'react-bootstrap';\r\n\r\n// const Forms = () => {\r\n//     const [name, setName] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handler = (e) => {\r\n//         e.preventDefault();\r\n//         const formData = { name, email };\r\n\r\n//         fetch('/form/create', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(formData),\r\n//         })\r\n//         .then(response => response.json())\r\n//         .then(data => {\r\n//             console.log('Success:', data);\r\n//             navigate(\"/success\");\r\n//             setName('');\r\n//             setEmail('');\r\n//         })\r\n//         .catch((error) => {\r\n//             console.error('Error:', error);\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <Container className=\"mt-5\">\r\n//             <h2 className=\"text-center\">User Registration</h2>\r\n//             <Form onSubmit={handler} className=\"border p-4 rounded shadow\">\r\n//                 <Form.Group controlId=\"formName\">\r\n//                     <Form.Label>Enter Name:</Form.Label>\r\n//                     <Form.Control \r\n//                         type=\"text\" \r\n//                         value={name} \r\n//                         onChange={(e) => setName(e.target.value)} \r\n//                         required \r\n//                         placeholder=\"Enter your name\" \r\n//                     />\r\n//                 </Form.Group>\r\n\r\n//                 <Form.Group controlId=\"formEmail\">\r\n//                     <Form.Label>Enter Email:</Form.Label>\r\n//                     <Form.Control \r\n//                         type=\"email\" \r\n//                         value={email} \r\n//                         onChange={(e) => setEmail(e.target.value)} \r\n//                         required \r\n//                         placeholder=\"Enter your email\" \r\n//                     />\r\n//                 </Form.Group>\r\n\r\n//                 <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n//                     Submit\r\n//                 </Button>\r\n//             </Form>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default Forms;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}